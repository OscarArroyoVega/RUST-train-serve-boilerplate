# First stage: Builder
FROM rust:1.82-bullseye as builder 

# Set the working directory
WORKDIR /build

# Install nightly toolchain
RUN rustup install nightly

# Install required dependencies for building
RUN apt-get update && \
    apt-get install -y \
    pkg-config \
    libssl-dev \
    libclang-dev \
    cmake \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set LIBCLANG_PATH
ENV LIBCLANG_PATH=/usr/lib/llvm-11/lib

# Install XGBoost from source
RUN git clone --recursive https://github.com/dmlc/xgboost /tmp/xgboost && \
    cd /tmp/xgboost && \
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && \
    make install && \
    cd / && \
    rm -rf /tmp/xgboost  

# copy of source code
COPY . .

# Build release binaries for api and train
RUN cargo +nightly build --release --bin api --bin train

# ---------------------------------------------------------------------------------------------------------------------------
# Second stage: Runtime
FROM debian:bullseye-slim

WORKDIR /app

# Use environment variable to determine which binary to run
ENV RUN_MODE=api

# Install only runtime dependencies
RUN apt-get update && \
    apt-get install -y \
    libssl1.1 \
    ca-certificates \
    libgomp1 \
    && rm -rf /var/lib/apt/lists/*

# Copy XGBoost library from builder
COPY --from=builder /usr/local/lib/libxgboost.so /usr/local/lib/
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

# Copy the compiled binaries from builder
COPY --from=builder /build/target/release/api /app/api
COPY --from=builder /build/target/release/train /app/train

# Create a non-root user
RUN useradd -m -U -s /bin/bash app
# Set ownership to non-root user
RUN chown -R app:app /app
USER app

# Create an entrypoint script
RUN echo '#!/bin/bash' > /app/entrypoint.sh && \
    echo 'if [ "$RUN_MODE" = "train" ]; then' >> /app/entrypoint.sh && \
    echo '    exec ./train "$@"' >> /app/entrypoint.sh && \
    echo 'else' >> /app/entrypoint.sh && \
    echo '    exec ./api "$@"' >> /app/entrypoint.sh && \
    echo 'fi' >> /app/entrypoint.sh && \
    chmod +x /app/entrypoint.sh
